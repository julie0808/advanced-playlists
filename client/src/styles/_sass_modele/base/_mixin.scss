//main: "../stylesheet.scss"


// a:hover, a:focus, a:active
@mixin etats ($val) {
    &:hover, &:focus, &:active {
        @each $propriete, $valeur in $val {
            #{$propriete}: $valeur;
        }
    }
}



/******** FONT-FACE *********/

@function contains($list, $values...) {
  @each $value in $values {
    @if type-of(index($list, $value)) != "number" {
      @return false;
    }
  }

  @return true;
}


@mixin font-face(
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $file-formats: eot woff2 woff ttf svg) {

    @font-face {
        font-family: $font-family;
        font-style: $style;
        font-weight: $weight;

        src: url("#{$file-path}.eot");
        src: font-source-declaration(
          $font-family,
          $file-path,
          $file-formats
        );
    }
}

@function font-source-declaration(
  $font-family,
  $file-path,
  $file-formats) {

  $src: ();

  $formats-map: (
    eot:   "#{$file-path}.eot?#iefix" format("embedded-opentype"),
    woff2: "#{$file-path}.woff2" format("woff2"),
    woff:  "#{$file-path}.woff" format("woff"),
    ttf:   "#{$file-path}.ttf" format("truetype"),
    svg:   "#{$file-path}.svg##{$font-family}" format("svg")
  );

  @each $key, $values in $formats-map {

    @if contains($file-formats, $key) {
      $file-path: nth($values, 1);
      $font-format: nth($values, 2);
      $src: append($src, url($file-path) $font-format, comma);
    }
  }

  @return $src;
}

/****** FONT-FACE fin ***********/